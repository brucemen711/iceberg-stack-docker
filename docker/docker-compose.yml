version: '3.7'
name: iceberg-stack-docker
services:
  trino-coordinator:
    image: 'trinodb/trino:454'
    hostname: trino-coordinator
    ports:
      - '8080:8080'
    volumes:
      - ./trino/etc:/etc/trino
      - ./conf:/opt/hive/gcp
    networks:
      - trino-network
    env_file:
      - .env

  postgres:
    image: 'postgres:11'
    hostname: postgres
    expose:
      - '5432'
    ports:
      - '5431:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: hive_db
    networks:
      - trino-network

  hive-metastore:
    # image: 'hivemetastore:latest'
    build: ./hive-metastore
    hostname: hive-metastore
    ports:
      - '9083:9083' # Metastore Thrift
    volumes:
      - ./conf:/opt/hive/gcp
    environment:
      METASTORE_DB_HOSTNAME: postgres
      METASTORE_TYPE: postgres
    depends_on:
      - postgres
    networks:
      - trino-network
    env_file:
      - .env

  minio:
    image: 'minio/minio:latest'
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server --console-address ":9001" /data
    networks:
      - trino-network
    
  minio-mc:
    image: 'minio/mc:latest'
    hostname: mc
    container_name: mc
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/iceberg;
      # /usr/bin/mc policy set public myminio/iceberg;
      exit 0;
      "
    depends_on:
      - minio
    networks:
      - trino-network
    
    

volumes:
  minio-data:
    driver: local

networks:
  trino-network:
    driver: bridge
